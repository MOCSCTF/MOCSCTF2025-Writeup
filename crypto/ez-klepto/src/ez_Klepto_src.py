from Crypto.Util.number import *
from hashlib import sha256
from gmpy2 import next_prime

flag = b'MOCSCTF{LOL_You_know_7he_RSA_Kl3pto}'
def RSA_key_generate():
    e = 65537
    P = getPrime(512)
    Q = next_prime(P)
    Y = P*Q
    return Y,e

def Klepto_RSA_key_generate(e,Y):
    while True:
        s = getRandomNBitInteger(1023)
        assert s < Y
        p = next_prime(int(sha256(str(s).encode()*4).hexdigest(),16))
        if isPrime(p):
            RND = getRandomNBitInteger(1024)
            c = pow(s,e,Y)
            tmp = long_to_bytes(c) + long_to_bytes(RND)
            tmp_ = bytes_to_long(tmp)
            q = tmp_ // p
            if isPrime(q):
                print(c.bit_length())
                print(bin(c))
                r = tmp_ % p
                n = p*q
                print(bin(n)[:1024+2])
                return n
            else:
                continue

def encrypt(flag,n):
    m = bytes_to_long(flag)
    enc = pow(m,65537,n)
    return enc

Y,e = RSA_key_generate()
n = Klepto_RSA_key_generate(e,Y)
c = encrypt(flag,n)

print(f'Y = {Y}')
print(f'n = {n}')
print(f'c = {c}')

'''
0b
0b
Y = 147533419754886904277727124856244346616956264280709689173255626491536402140956254894413948786370180385799712103011381728260612612123846041459301905793849218125914790743893573021066172482787350314732670171200008944306692059927354445469432837980920044531208854429170654469187034172559133416796921560533816266911
n = 8571430757393633647054817137727155989886957558541754914408107420787003508424564394945927571919168678100337237379078779425731903863558586391923497594170008813154671225006841398580512753655039432222891791388164136988066939396047689025334196818528707807582645026717886117760789433480843654269340606418725375882135517760506220720118172739338778945719007543943658625906681881382117511411519463793492223285122453174125739809663942654847878079861602537544051704875517511647020953713077718175603731882245245075001083297385098219043734025144916072700351731471489697266184003961754719935166038988567360080105571564310335500409
c = 6919346947875409161963577193581333582128743932256723127242982316832652772301025807175084851234139039021005911030276584098159198621581893410258310444936545782754865502304163274758272730928944859231182249954838078719049569874316542442489473402829709602498162597005874654958045491228702808253091407050221999861722008820532739680313935616368892928854682398662202664672646079149516167839944419722505008968493961455049331208748310698539152584268263350074360317220953377419181097905969015809719122029751439649977158369954371109789090602678356475055724372689489521240271566588677767848137104321202472275617324042952028771959
'''